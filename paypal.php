<?php 
include_once('functions.php');
if ($_SESSION['g_opts'] == 0) {
    $frequency = 'DAY';
    $cycle = 365;
}
if ($_SESSION['g_opts'] == 1) {
    $frequency = 'MONTH';
    $cycle = 12;
}
if ($_SESSION['g_opts'] == 2) {
    $frequency = 'YEAR';
    $cycle = 1;
}


$info_country  = $_SESSION['country'];
$info_address1 = $_SESSION['address1'];
$info_address2 = $_SESSION['address2'];
$info_city     = $_SESSION['city'];
$info_state    = $_SESSION['state']; 

$cause = '';
$counter = 1;
foreach ($_SESSION['cause'] as $key => $value) {
    $key = str_replace(' ', '', $key);
    $cause = $cause.$key;
    if ($counter < count($_SESSION['cause'])) {
        $cause = $cause.'_';
    }
    $counter = $counter + 1;
}
$_SESSION['pp_desc'] = $cause;
$payment_amount = $_SESSION['total_payment'];

if (isset($_REQUEST['paypalOrder'])) {
    $details = ( !empty($_POST['details'])   ? $_POST['details'] : '' ) ;
    $order_id = $details['purchase_units'][0]['reference_id'];
    
    $i_time = strtotime('now');
    $i_time = date('Y-m-d H:i:s' , $i_time);

    $email  = $details['payer']['email_address'];
    $_SESSION['co_email'] = $email;
    $name   = $details['payer']['name']['given_name'];
    $_SESSION['user_name'] = $name;

    $cause = '';
    $counter = 1;
    foreach ($_SESSION['cause'] as $key => $value) {
        $key = str_replace(' ', '', $key);
        $cause = $cause.$key;
        if ($counter < count($_SESSION['cause'])) {
            $cause = $cause.'_';
        }
        $counter = $counter + 1;
    }

    if ($_SESSION['g_opts'] == 0) {
        $frequency = 'DAY';
    }
    if ($_SESSION['g_opts'] == 1) {
        $frequency = 'MONTH';
    }
    if ($_SESSION['g_opts'] == 2) {
        $frequency = 'YEAR';
    }

    $paid_amount = $_SESSION['total_payment'];

    $password = password_generate(8) . uniqid();
    $to = $email;
    $subject = "New User Registerd";
    $website_url = website_url;

    $message = "
    <html>
        <head>
            <title>New User Registerd</title>
        </head>
        <body>
            <p>Your Account has been registered please <a href='$website_url/login.php'>Login</a></p>
            <table>
                <tr>
                    <th>User: $email</th>
                </tr>
                <tr>
                    <td>Password: $password</td>
                </tr>
            </table>
        </body>
    </html>
    ";
    $headers = "MIME-Version: 1.0" . "\r\n";
    $headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
    $headers .= 'From: noreply@handsforcharity.org';


    $query = "SELECT * FROM `users` WHERE `email`='{$email}'";
    $exicution = mysqli_query($con, $query) or die(mysqli_error($con) . "<br>" . $query);
    if (mysqli_num_rows($exicution) < 1) {
        $query_insert = "INSERT INTO `users`(`email`,`first_name`,`password`) VALUES ('{$email}','{$name}','{$password}')";
        $result = mysqli_query($con, $query_insert);
        if ($result) {
            $insert_user_id = mysqli_insert_id($con);
            mail($to, $subject, $message, $headers);
        }
    } else {
        while ($data = mysqli_fetch_array($exicution)) {
            $insert_user_id = $data['id'];
        }
    }

    // $trans_id = $order_id;
    $trans_id = $details['id'];
    $_SESSION['trans_id'] = $trans_id;


    $query_insert = "INSERT INTO `transactions`(`uid`,`name`,`email`,`cause`,`type`,`amount`,`timestamp`,`trx_id`, `country`, `address1`, `address2`, `city`, `state`, `last_name`, `phone`, `organisation`, `zip_code`) VALUES ('{$insert_user_id}','{$name}','{$email}','{$cause}','{$frequency}','{$paid_amount}','{$i_time}','{$trans_id}', '{$info_country}', '{$info_address1}', '{$info_address2}', '{$info_city}', '{$info_state}', '{$info_lastname}', '{$info_phone}', '{$info_org}', '{$info_zip}')";
    $result = mysqli_query($con, $query_insert);
    if ($result) {
        $orderStatus = 'scceessed';
        // header('Location:' . thankyou_url);
        // exit;
        echo "done";
    } else {
        echo "<pre>";
        print_r($query_insert . mysqli_error($con));
        die("</pre>");
    }
    die();
}


$package_name = $_SESSION['pp_desc'].'_'.$_SESSION['total_payment'];
if ($_SESSION['g_opts'] == 1) {
    $package_name = 'm_'.$package_name;
}
if ($_SESSION['g_opts'] == 2) {
    $package_name = 'y_'.$package_name;
}

// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
$ch = curl_init();

curl_setopt($ch, CURLOPT_URL, 'https://api-m.paypal.com/v1/oauth2/token');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, "grant_type=client_credentials");
curl_setopt($ch, CURLOPT_USERPWD, 'AaqAIUqhOqs-Y_THDIqA4vSRj5S9o5sbkvRISWPYB9XxrKOZA88v6YJNUCtWZ_hiueyiBZiMi2v3CwKd' . ':' . 'EESMB22xcBvZjxrTDAZCMKeLr5s4lLB2ka5HdXFeQGyBW4mQUUDdUcHLDIBj32KVoFwAk_YXLRx04glO');

$headers = array();
$headers[] = 'Content-Type: application/x-www-form-urlencoded';
curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

$result = curl_exec($ch);
if (curl_errno($ch)) {
    echo 'Error:' . curl_error($ch);
}
curl_close($ch);
$result1 = json_decode($result);

$ch = curl_init();

curl_setopt($ch, CURLOPT_URL, 'https://api-m.paypal.com/v1/catalogs/products');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, "{\n  \"name\": \"$package_name\",\n  \"description\": \"$package_name\",\n  \"type\": \"SERVICE\",\n  \"category\": \"SOFTWARE\",\n  \"image_url\": \"https://example.com/streaming.jpg\",\n  \"home_url\": \"https://example.com/home\"\n}");

$headers = array();
$headers[] = 'Content-Type: application/json';
$headers[] = 'Authorization: Bearer '.$result1->access_token;
curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

$result = curl_exec($ch);
if (curl_errno($ch)) {
    echo 'Error:' . curl_error($ch);
}
curl_close($ch);
$result2 = json_decode($result);
$product_id = $result2->id;

$paypal_process_fee = 0;
if (isset($_SESSION['process_fee'])) {
    // $paypal_process_fee = $_SESSION['process_fee'];
    // $payment_amount = $payment_amount + $paypal_process_fee;
    // $paypal_process_fee = 0;
}

$ch = curl_init();


curl_setopt($ch, CURLOPT_URL, 'https://api-m.paypal.com/v1/billing/plans');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, "{\n      \"product_id\": \"$product_id\",\n      \"name\": \"$package_name\",\n      \"description\": \"$package_name\",\n      \"billing_cycles\": [\n        {\n          \"frequency\": {\n            \"interval_unit\": \"$frequency\",\n            \"interval_count\": 1\n          },\n          \"tenure_type\": \"REGULAR\",\n          \"sequence\": 1,\n          \"total_cycles\": $cycle,\n          \"pricing_scheme\": {\n            \"fixed_price\": {\n              \"value\": \"$payment_amount\",\n              \"currency_code\": \"CAD\"\n            }\n          }\n        }\n      ],\n      \"payment_preferences\": {\n        \"auto_bill_outstanding\": true,\n        \"setup_fee\": {\n          \"value\": \"$paypal_process_fee\",\n          \"currency_code\": \"CAD\"\n        },\n        \"setup_fee_failure_action\": \"CONTINUE\",\n        \"payment_failure_threshold\": 3\n      },\n      \"taxes\": {\n        \"percentage\": \"0\",\n        \"inclusive\": false\n      }\n    }");
$headers = array();
$headers[] = 'Accept: application/json';
$headers[] = 'Authorization: Bearer '.$result1->access_token;
$headers[] = 'Content-Type: application/json';
curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

$result = curl_exec($ch);
if (curl_errno($ch)) {
    echo 'Error:' . curl_error($ch);
}
curl_close($ch);

$result3 = json_decode($result);

$PlanID = $result3->id;
?>
<div class="tab tabDiv">
  <div style="max-width: 450px; display: block; padding: 0px; margin: 0 auto;text-align: center; ">         
          <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
          <?php if ($_SESSION['g_opts'] == 0) { ?>
              <script src="https://www.paypal.com/sdk/js?disable-funding=paylater,venmo,credit&currency=CAD&client-id=AaqAIUqhOqs-Y_THDIqA4vSRj5S9o5sbkvRISWPYB9XxrKOZA88v6YJNUCtWZ_hiueyiBZiMi2v3CwKd"></script>
          <?php } ?>
          <?php if ($_SESSION['g_opts'] == 1 || $_SESSION['g_opts'] == 2) { ?>
            <script src="https://www.paypal.com/sdk/js?client-id=AaqAIUqhOqs-Y_THDIqA4vSRj5S9o5sbkvRISWPYB9XxrKOZA88v6YJNUCtWZ_hiueyiBZiMi2v3CwKd&vault=true&intent=subscription"></script>
          <?php } ?>
          
            <div class="result" style="margin: 0 auto;text-align: center;width: 100%;font-size: 26px;"></div>
            <div id="paypal-button-container"></div>

            <!-- Add the checkout buttons, set up the order and approve the order -->
            <script>
                <?php if ($_SESSION['g_opts'] == 0) { ?>
                  paypal.Buttons({
                    style: { shape: 'rect',color: 'gold',layout: 'vertical',label: 'paypal', },

                    createOrder: function(data, actions) {
                        return actions.order.create({
                            purchase_units: [{
                                reference_id: '<?php echo uniqid() ?>',
                                description: '<?php echo $_SESSION['pp_desc'] ?>',
                                amount: {
                                    currency_code: 'CAD',
                                    value: '<?php echo $_SESSION['total_payment'] ?>'
                                },

                            }]
                        });
                    },
                    onApprove: function(data, actions) {
                        return actions.order.capture().then(function(details) {
                            jQuery.ajax({
                                method: "POST",
                                url: "<?php echo website_url.'paypal.php'?>",
                                timeout: 55000,
                                data: { 
                                    details: details,
                                    paypalOrder: 'paypalOrder'
                                },
                            }).done(function( msg ) {
                                if (msg == 'done') {
                                    window.location.href = "<?php echo thankyou_url ?>";
                                }else{ 
                                    
                                }
                            });
                        });
                    },
                    onError: function(err) {
                        console.log('error', err);
                    }
                }).render('#paypal-button-container');
              <?php } else { ?>
                paypal.Buttons({
                    createSubscription: function(data, actions) {
                        return actions.subscription.create({
                            'plan_id': '<?php echo $PlanID ?>',
                        });
                    },
                    onApprove: function(data, actions) {
                        alert('You have successfully created subscription ' + data.subscriptionID);
                        window.location.href = '<?php echo thankyou_url ?>&paypal_subs=true&trxn_id='+data.subscriptionID;
                    }
                }).render('#paypal-button-container');
              <?php } ?>
            
            </script>


  </div>
</div>